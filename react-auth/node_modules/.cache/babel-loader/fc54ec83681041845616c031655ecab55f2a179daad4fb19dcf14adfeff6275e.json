{"ast":null,"code":"var _jsxFileName = \"/home/val/bsu/kolb/auth/react-auth/src/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [register, setRegister] = useState(false);\n  const handleSubmit = e => {\n    // set configurations\n\n    // prevent the form from refreshing the whole page\n    e.preventDefault();\n    fetch(\"/api/user/register\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password\n      })\n    }).then(res => res.json()).then(result => {\n      if (res.message = \"SUCC\") {}\n    });\n\n    // make a popup alert showing the \"submitted\" text\n    alert(\"Submited\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"name\",\n          name: \"name\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          placeholder: \"Enter name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          name: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"Enter email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), register ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-success\",\n        children: \"You Are Registered Successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-danger\",\n        children: \"You Are Not Registered\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: e => handleSubmit(e),\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Register, \"doqEwFsO76Tk4Jl38xAokEqg/RQ=\");\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useEffect","useState","axios","Form","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","name","setName","email","setEmail","password","setPassword","register","setRegister","handleSubmit","e","preventDefault","fetch","method","body","JSON","stringify","state","then","res","json","result","message","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","controlId","Label","Control","type","value","onChange","target","placeholder","className","variant","onClick","_c","$RefreshReg$"],"sources":["/home/val/bsu/kolb/auth/react-auth/src/Register.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport axios from \"axios\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default function Register() {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [register, setRegister] = useState(false);\n  const handleSubmit = (e) => {\n    // set configurations\n\n    // prevent the form from refreshing the whole page\n    e.preventDefault();\n    fetch(\"/api/user/register\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        if ((res.message = \"SUCC\")) {\n        }\n      });\n\n    // make a popup alert showing the \"submitted\" text\n    alert(\"Submited\");\n  };\n  return (\n    <>\n      <h2>Register</h2>\n      <Form onSubmit={(e) => handleSubmit(e)}>\n        {/* name */}\n        <Form.Group controlId=\"formBasicName\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"name\"\n            name=\"name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            placeholder=\"Enter name\"\n          />\n        </Form.Group>\n        {/* email */}\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"Enter email\"\n          />\n        </Form.Group>\n\n        {/* password */}\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            placeholder=\"Password\"\n          />\n        </Form.Group>\n        {/* display success message */}\n        {register ? (\n          <p className=\"text-success\">You Are Registered Successfully</p>\n        ) : (\n          <p className=\"text-danger\">You Are Not Registered</p>\n        )}\n\n        {/* submit button */}\n        <Button\n          variant=\"primary\"\n          type=\"submit\"\n          onClick={(e) => handleSubmit(e)}\n        >\n          Register\n        </Button>\n      </Form>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}